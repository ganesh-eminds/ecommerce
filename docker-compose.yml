services:

  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    depends_on:
      - eureka-server

  kafka:
    image: confluentinc/cp-kafka:7.2.1
    ports:
      - 9092:9092
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    depends_on:
      - eureka-server
      - zookeeper

  postgres:
    image: postgres:15
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: ecommerce

  order-service:
    build: ./order-service
    ports:
      - 8082:8082
    depends_on:
      - eureka-server
      - kafka
      - postgres
    environment:
      SPRING_PROFILES_ACTIVE: docker

  product-service:
    build: ./product-service
    ports:
      - 8081:8081
    depends_on:
      - eureka-server
      - kafka
      - postgres
    environment:
      SPRING_PROFILES_ACTIVE: docker
      

  payment-service:
    build: ./payment-service
    ports:
      - 8083:8083
    depends_on:
      - eureka-server
      - kafka
      - postgres
    environment:
      SPRING_PROFILES_ACTIVE: docker

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8085:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on:
      - eureka-server
      - kafka

  eureka-server:
    build:
      context: ./eureka-server
    container_name: eureka-server
    ports:
      - "8761:8761"
    environment:
      SPRING_PROFILES_ACTIVE: docker

#  kong:
#    image: kong:latest
#    container_name: kong
#    ports:
#      - "8000:8000"
#      - "8443:8443"
#      - "8001:8001"
#      - "8444:8444"
#    environment:
#      KONG_DATABASE: "off"
#      KONG_DECLARATIVE_CONFIG: "/kong-config/kong.yml"
#      KONG_ADMIN_LISTEN: "0.0.0.0:8001, 0.0.0.0:8444 ssl"
#    volumes:
#      - ./kong-config:/kong-config
#    depends_on:
#      - kafka
#      - zookeeper
#      - eureka-server
#      - order-service
#      - payment-service
#      - product-service
#
#  konga:
#    image: pantsel/konga:latest
#    container_name: konga
#    ports:
#      - "1337:1337" # Konga UI
#    environment:
#      NODE_ENV: "production"
#      KONG_ADMIN_URL: "http://kong:8001" # Kong Admin API URL
#    depends_on:
#      - kong
